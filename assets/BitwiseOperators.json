[
    {
        "question": "In which numbering system can the binary number 1011011111000101 be easily converted to?\r\n\r\n",
        "a": "Decimal system",
        "b": "Hexadecimal system",
        "c": "Octal system",
        "d": "No need to convert",
        "answer": "Hexadecimal system"
    },
    {
        "question": "Which bitwise operator is suitable for turning off a particular bit in a number?\r\n\r\n",
        "a": "&& operator",
        "b": "& operator",
        "c": "|| operator",
        "d": "! operator",
        "answer": "& operator"
    },
    {
        "question": "Which bitwise operator is suitable for turning on a particular bit in a number?\r\n\r\n",
        "a": "&& operator",
        "b": "& operator",
        "c": "|| operator",
        "d": "| operator",
        "answer": "| operator"
    },
    {
        "question": "Which bitwise operator is suitable for checking whether a particular bit is on or off?\r\n\r\n",
        "a": "&& operator",
        "b": "& operator",
        "c": "|| operator",
        "d": "! operator",
        "answer": "& operator"
    },
    {
        "question": "Assunming, integer is 2 byte, What will be the output of the program?\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    printf(\"%x\\n\", -1>>1);\r\n    return 0;\r\n}",
        "a": "ffff",
        "b": "0fff",
        "c": "0000",
        "d": "fff0",
        "answer": "ffff"
    },
    {
        "question": "If an unsigned int is 2 bytes wide then, What will be the output of the program ?\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    unsigned int m = 32;\r\n    printf(\"%x\\n\", ~m);\r\n    return 0;\r\n}",
        "a": "ffff",
        "b": "0000",
        "c": "ffdf",
        "d": "ddfd",
        "answer": "ffdf"
    },
    {
        "question": "Assuming a integer 2-bytes, What will be the output of the program?\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    printf(\"%x\\n\", -1<<3);\r\n    return 0;\r\n}",
        "a": "ffff",
        "b": "fff8",
        "c": "0",
        "d": "-1",
        "answer": "fff8"
    },
    {
        "question": "\t\r\nIf an unsigned int is 2 bytes wide then, What will be the output of the program ?\r\n\r\n#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    unsigned int a=0xffff;\r\n    ~a;\r\n    printf(\"%x\\n\", a);\r\n    return 0;\r\n}",
        "a": "ffff",
        "b": "0000",
        "c": "00ff",
        "d": "ddfd",
        "answer": "ffff"
    },
    {
        "question": "What will be the output of the program?\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    unsigned char i = 0x80;\r\n    printf(\"%d\\n\", i<<1);\r\n    return 0;\r\n}",
        "a": "0",
        "b": "256",
        "c": "100",
        "d": "80",
        "answer": "256"
    },
    {
        "question": "What will be the output of the program?\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    printf(\"%d >> %d %d >> %d\\n\", 4 >> 1, 8 >> 1);\r\n    return 0;\r\n}",
        "a": "4 1 8 1",
        "b": "4 >> 1 8 >> 1",
        "c": "2 >> 4 Garbage value >> Garbage value",
        "d": "2 4",
        "answer": "2 >> 4 Garbage value >> Garbage value"
    },
    {
        "question": "What will be the output of the program?\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    char c=48;\r\n    int i, mask=01;\r\n    for(i=1; i<=5; i++)\r\n    {\r\n        printf(\"%c\", c|mask);\r\n        mask = mask<<1;\r\n    }\r\n    return 0;\r\n}",
        "a": "12400",
        "b": "12480",
        "c": "12500",
        "d": "12556",
        "answer": "12480"
    },
    {
        "question": "What will be the output of the program?\r\n#define P printf(\"%d\\n\", -1^~0);\r\n#define M(P) int main()\\\r\n             {\\\r\n                P\\\r\n                return 0;\\\r\n             }\r\nM(P)",
        "a": "1",
        "b": "0",
        "c": "-1",
        "d": "2",
        "answer": "0"
    },
    {
        "question": "What will be the output of the program ?\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    int i=32, j=0x20, k, l, m;\r\n    k=i|j;\r\n    l=i&j;\r\n    m=k^l;\r\n    printf(\"%d, %d, %d, %d, %d\\n\", i, j, k, l, m);\r\n    return 0;\r\n}",
        "a": "0, 0, 0, 0, 0",
        "b": "0, 32, 32, 32, 32",
        "c": "32, 32, 32, 32, 0",
        "d": "32, 32, 32, 32, 32",
        "answer": "32, 32, 32, 32, 0"
    },
    {
        "question": "What will be the output of the program?\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    printf(\"%d %d\\n\", 32<<1, 32<<0);\r\n    printf(\"%d %d\\n\", 32<<-1, 32<<-0);\r\n    printf(\"%d %d\\n\", 32>>1, 32>>0);\r\n    printf(\"%d %d\\n\", 32>>-1, 32>>-0);\r\n    return 0;\r\n}",
        "a": "Garbage values",
        "b": "64 32 0 32 16 32 0 32",
        "c": "All zeros",
        "d": "8 0 0 0 32 0 0 16",
        "answer": "64 32 0 32 16 32 0 32"
    },
    {
        "question": "What will be the output of the program?\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    unsigned int res;\r\n    res = (64 >>(2+1-2)) & (~(1<<2));\r\n    printf(\"%d\\n\", res);\r\n    return 0;\r\n}",
        "a": "32",
        "b": "64",
        "c": "0",
        "d": "128",
        "answer": "32"
    },
    {
        "question": "What will be the output of the program ?\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    int i=4, j=8;\r\n    printf(\"%d, %d, %d\\n\", i|j&j|i, i|j&&j|i, i^j);\r\n    return 0;\r\n}",
        "a": "4, 8, 0",
        "b": "1, 2, 1",
        "c": "12, 1, 12",
        "d": "0, 0, 0",
        "answer": "12, 1, 12"
    },
    {
        "question": "Which of the following statements are correct about the program?\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    unsigned int num;\r\n    int i;\r\n    scanf(\"%u\", &num);\r\n    for(i=0; i<16; i++)\r\n    {\r\n        printf(\"%d\", (num<<i & 1<<15)?1:0);\r\n    }\r\n    return 0;\r\n}",
        "a": "It prints all even bits from num",
        "b": "It prints all odd bits from num",
        "c": "It prints binary equivalent num",
        "d": "Error",
        "answer": "It prints binary equivalent num"
    },
    {
        "question": "Which of the following statements are correct about the program?\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    unsigned int num;\r\n    int c=0;\r\n    scanf(\"%u\", &num);\r\n    for(;num;num>>=1)\r\n    {\r\n        if(num & 1)\r\n            c++;\r\n    }\r\n    printf(\"%d\", c);\r\n    return 0;\r\n}",
        "a": "It counts the number of bits that are ON (1) in the number num.",
        "b": "It counts the number of bits that are OFF (0) in the number num.",
        "c": "It sets all bits in the number num to 1",
        "d": "Error",
        "answer": "It counts the number of bits that are ON (1) in the number num."
    },
    {
        "question": "Which of the following statements are correct about the program?\r\n#include<stdio.h>\r\nchar *fun(unsigned int num, int base);\r\nint main()\r\n{\r\n    char *s;\r\n    s=fun(128, 2);\r\n    s=fun(128, 16);\r\n    printf(\"%s\\n\",s);\r\n    return 0;\r\n}\r\nchar *fun(unsigned int num, int base)\r\n{\r\n    static char buff[33];\r\n    char *ptr = &buff[sizeof(buff)-1];\r\n    *ptr = '\\0';\r\n    do\r\n    {\r\n        *--ptr = \"0123456789abcdef\"[num %base];\r\n        num \/=base;\r\n    }while(num!=0);\r\n    return ptr;\r\n}",
        "a": "It converts a number to a given base.",
        "b": "It converts a number to its equivalent binary.",
        "c": "It converts a number to its equivalent hexadecimal.",
        "d": "It converts a number to its equivalent octal.",
        "answer": "It converts a number to a given base."
    },
    {
        "question": "Which of the following statements are correct about the program?\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    unsigned int m[] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};\r\n    unsigned char n, i;\r\n    scanf(\"%d\", &n);\r\n    for(i=0; i<=7; i++)\r\n    {\r\n        if(n & m[i])\r\n            printf(\"yes\");\r\n    }\r\n    return 0;\r\n}",
        "a": "It will put OFF all bits that are ON in the number n",
        "b": "It will test whether the individual bits of n are ON or OFF",
        "c": "It will put ON all bits that are OFF in the number n",
        "d": "It will report compilation errors in the if statement.",
        "answer": "It will test whether the individual bits of n are ON or OFF"
    },
    {
        "question": "Left shifting a number by 1 is always equivalent to multiplying it by 2.\r\n\r\n",
        "a": "True",
        "b": "False",
        "c": "",
        "d": "",
        "answer": "True"
    },
    {
        "question": "In the statement expression1 >> expression2. if expression1 is a signed integer with its leftmost bit set to 1 then on right shifting it the result of the statement will vary from computer to computer\r\n\r\n",
        "a": "True",
        "b": "False",
        "c": "",
        "d": "",
        "answer": "True"
    },
    {
        "question": "Bitwise & and | are unary operators\r\n\r\n",
        "a": "True",
        "b": "False",
        "c": "",
        "d": "",
        "answer": "False"
    },
    {
        "question": "Bitwise & can be used to check if more than one bit in a number is on.\r\n\r\n",
        "a": "True",
        "b": "False",
        "c": "",
        "d": "",
        "answer": "True"
    },
    {
        "question": "Bitwise & can be used to check if a bit in number is set or not.\r\n\r\n",
        "a": "True",
        "b": "False",
        "c": "",
        "d": "",
        "answer": "True"
    },
    {
        "question": "Bitwise & can be used to divide a number by powers of 2\r\n\r\n",
        "a": "True",
        "b": "False",
        "c": "",
        "d": "",
        "answer": "False"
    },
    {
        "question": "Left shifting an unsigned int or char by 1 is always equivalent to multiplying it by 2.\r\n\r\n",
        "a": "True",
        "b": "False",
        "c": "",
        "d": "",
        "answer": "True"
    },
    {
        "question": "On left shifting, the bits from the left are rotated and brought to the right and accommodated where there is empty space on the right?\r\n\r\n",
        "a": "True",
        "b": "False",
        "c": "",
        "d": "",
        "answer": "False"
    },
    {
        "question": "Bitwise & can be used in conjunction with ~ operator to turn off 1 or more bits in a number.\r\n\r\n",
        "a": "Yes",
        "b": "No",
        "c": "",
        "d": "",
        "answer": "Yes"
    },
    {
        "question": "Bitwise can be used to reverse a sign of a number.\r\n\r\n",
        "a": "Yes",
        "b": "No",
        "c": "",
        "d": "",
        "answer": "No"
    },
    {
        "question": "Bitwise can be used to generate a random number.\r\n\r\n",
        "a": "Yes",
        "b": "No",
        "c": "",
        "d": "",
        "answer": "No"
    },
    {
        "question": "Bitwise | can be used to multiply a number by powers of 2.\r\n\r\n",
        "a": "Yes",
        "b": "No",
        "c": "",
        "d": "",
        "answer": "No"
    },
    {
        "question": "Bitwise | can be used to set multiple bits in number.\r\n\r\n",
        "a": "Yes",
        "b": "No",
        "c": "",
        "d": "",
        "answer": "Yes"
    },
    {
        "question": "Bitwise can be used to perform addition and subtraction.\r\n\r\n",
        "a": "Yes",
        "b": "No",
        "c": "",
        "d": "",
        "answer": "No"
    },
    {
        "question": "Bitwise | can be used to set a bit in number.\r\n\r\n",
        "a": "Yes",
        "b": "No",
        "c": "",
        "d": "",
        "answer": "Yes"
    }
]